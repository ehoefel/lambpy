
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DOT LAMBDA LPAREN RPAREN VARexpression : LAMBDA variable-list DOT expressionvariable-list : variablevariable-list : variable variable-listexpression : application-termapplication-term : application-term itemapplication-term : itemitem : variableitem : LPAREN expression RPARENvariable : VAR'
    
_lr_action_items = {'LAMBDA':([0,6,12,],[2,2,2,]),'LPAREN':([0,3,4,5,6,7,10,12,14,],[6,6,-6,-7,6,-9,-5,6,-8,]),'VAR':([0,2,3,4,5,6,7,9,10,12,14,],[7,7,7,-6,-7,7,-9,7,-5,7,-8,]),'$end':([1,3,4,5,7,10,14,15,],[0,-4,-6,-7,-9,-5,-8,-1,]),'RPAREN':([3,4,5,7,10,11,14,15,],[-4,-6,-7,-9,-5,14,-8,-1,]),'DOT':([7,8,9,13,],[-9,12,-2,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,6,12,],[1,11,15,]),'application-term':([0,6,12,],[3,3,3,]),'item':([0,3,6,12,],[4,10,4,4,]),'variable':([0,2,3,6,9,12,],[5,9,5,5,9,5,]),'variable-list':([2,9,],[8,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> LAMBDA variable-list DOT expression','expression',4,'p_abstraction','parser.py',28),
  ('variable-list -> variable','variable-list',1,'p_variable_list','parser.py',47),
  ('variable-list -> variable variable-list','variable-list',2,'p_variable_list2','parser.py',52),
  ('expression -> application-term','expression',1,'p_expression','parser.py',57),
  ('application-term -> application-term item','application-term',2,'p_application_term','parser.py',62),
  ('application-term -> item','application-term',1,'p_item','parser.py',67),
  ('item -> variable','item',1,'p_variable','parser.py',72),
  ('item -> LPAREN expression RPAREN','item',3,'p_grouping','parser.py',77),
  ('variable -> VAR','variable',1,'p_variable2','parser.py',82),
]
